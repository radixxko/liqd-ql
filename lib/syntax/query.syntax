:string
	/"(([^\\"]|\\.)*?)"/1
	/'(([^\\']|\\.)*?)'/1

:number
    /[-]{0,1}[0-9]+/

:alphanumeric
    /[a-zA-Z0-9_]+/

:pair_round_brackets
	/("(([^\\"]|\\.)*?)"|'(([^\\']|\\.)*?)'|[^"'\(\)]+|\(\s*\)|\((?R)\))+/

:pair_square_brackets
	/("(([^\\"]|\\.)*?)"|'(([^\\']|\\.)*?)'|[^"'\[\]]+|\[\s*\]|\[(?R)\])+/

:pair_curly_brackets
	/("(([^\\"]|\\.)*?)"|'(([^\\']|\\.)*?)'|[^"'\{\}]+|\{\s*\}|\{(?R)\})+/

:operator
    /(\*=\*|\*=|=\*|=|!=|<=|<|>=|>|LIKE|IN)/

:json
    { $json:pair_curly_brackets }

:sql
    /([^;()]|\(([^;()]|\([^;()]+\))+\))+(?=[;)])/

:value
    $:string
    $:number
    $:json
    $:sql

:table
    :alphanumeric

:modifiers
    ; $modifier:/(after|before|orderBy|groupBy|limit)/ : $:value

:condition
    $column:alphanumeric $:operator $:value ?:/,/

:conditions
    ( ?...$:condition ?...$:modifiers )

:query
    $:table ?$condition:conditions $bracket:/[{\[]/ ...$columns:column /[}\]]/

:column
    $alias:alphanumeric : $column:query ?:/,/
    ?$expand:/\.\.\./ $column:query ?:/,/
    $alias:alphanumeric : $column:alphanumeric ?:/,/
    $column:alphanumeric ?:/,/

:main
    :query
