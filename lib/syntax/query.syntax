:string
	/"(([^\\"]|\\.)*?)"/1
	/'(([^\\']|\\.)*?)'/1

:number
    /[-]{0,1}[0-9]+/

:alphanumeric
    /[a-zA-Z][a-zA-Z0-9_]*/

:pair_round_brackets
	/("(([^\\"]|\\.)*?)"|'(([^\\']|\\.)*?)'|[^"'\(\)]+|\(\s*\)|\((?R)\))+/

:pair_square_brackets
	/("(([^\\"]|\\.)*?)"|'(([^\\']|\\.)*?)'|[^"'\[\]]+|\[\s*\]|\[(?R)\])+/

:pair_curly_brackets
	/("(([^\\"]|\\.)*?)"|'(([^\\']|\\.)*?)'|[^"'\{\}]+|\{\s*\}|\{(?R)\})+/

:operator
    /(\*=\*|\*=|=\*|=|!=|<=|<|>=|>)/

:json
    { $json:pair_curly_brackets }

:value
    $:string
    $:number
    $:json

:table
    :alphanumeric

:modifiers
    ; $modifier:/(after|before|order|limit)/ : $:value

:condition
    $column:alphanumeric $:operator $:value ?:/,/

:conditions
    ( ...$:condition ?...$:modifiers )

:column
    $alias:alphanumeric : $column:alphanumeric ?:/,/
    $column:alphanumeric ?:/,/

:main
    $:table ?$condition:conditions { ...$columns:column }
